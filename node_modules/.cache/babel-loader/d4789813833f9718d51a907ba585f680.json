{"ast":null,"code":"import _regeneratorRuntime from \"/home/rakshanda/Music/assignment/a/banksearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/rakshanda/Music/assignment/a/banksearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/rakshanda/Music/assignment/a/banksearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport var useTableSearch = function useTableSearch(_ref) {\n  var searchVal = _ref.searchVal,\n      retrieve = _ref.retrieve;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredData = _useState2[0],\n      setFilteredData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      origData = _useState4[0],\n      setOrigData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchIndex = _useState6[0],\n      setSearchIndex = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function () {\n    setLoading(true);\n\n    var crawl = function crawl(user, allValues) {\n      if (!allValues) allValues = [];\n\n      for (var key in user) {\n        if (typeof user[key] === \"object\") crawl(user[key], allValues);else allValues.push(user[key] + \" \");\n      }\n\n      return allValues;\n    };\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$retrieve, users, searchInd;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return retrieve();\n\n              case 2:\n                _yield$retrieve = _context.sent;\n                users = _yield$retrieve.data;\n                setOrigData(users);\n                setFilteredData(users);\n                searchInd = users.map(function (user) {\n                  var allValues = crawl(user);\n                  return {\n                    allValues: allValues.toString()\n                  };\n                });\n                setSearchIndex(searchInd);\n                if (users) setLoading(false);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [retrieve]);\n  useEffect(function () {\n    if (searchVal) {\n      var reqData = searchIndex.map(function (user, index) {\n        if (user.allValues.toLowerCase().indexOf(searchVal.toLowerCase()) >= 0) return origData[index];\n        return null;\n      });\n      setFilteredData(reqData.filter(function (user) {\n        if (user) return true;\n        return false;\n      }));\n    } else setFilteredData(origData);\n  }, [searchVal, origData, searchIndex]);\n  return {\n    filteredData: filteredData,\n    loading: loading\n  };\n};","map":{"version":3,"sources":["/home/rakshanda/Music/assignment/a/banksearch/src/searchBank.js"],"names":["useState","useEffect","useTableSearch","searchVal","retrieve","filteredData","setFilteredData","origData","setOrigData","searchIndex","setSearchIndex","loading","setLoading","crawl","user","allValues","key","push","fetchData","users","data","searchInd","map","toString","reqData","index","toLowerCase","indexOf","filter"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA6B;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACzD,kBAAwCJ,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAsCR,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA8BV,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,UAAhB;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAOC,SAAP,EAAqB;AACjC,UAAI,CAACA,SAAL,EAAgBA,SAAS,GAAG,EAAZ;;AAChB,WAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AACpB,YAAI,OAAOA,IAAI,CAACE,GAAD,CAAX,KAAqB,QAAzB,EAAmCH,KAAK,CAACC,IAAI,CAACE,GAAD,CAAL,EAAYD,SAAZ,CAAL,CAAnC,KACKA,SAAS,CAACE,IAAV,CAAeH,IAAI,CAACE,GAAD,CAAJ,GAAY,GAA3B;AACN;;AACD,aAAOD,SAAP;AACD,KAPD;;AAQA,QAAMG,SAAS;AAAA,2EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACcd,QAAQ,EADtB;;AAAA;AAAA;AACFe,gBAAAA,KADE,mBACRC,IADQ;AAEhBZ,gBAAAA,WAAW,CAACW,KAAD,CAAX;AACAb,gBAAAA,eAAe,CAACa,KAAD,CAAf;AACME,gBAAAA,SAJU,GAIEF,KAAK,CAACG,GAAN,CAAU,UAACR,IAAD,EAAU;AACpC,sBAAMC,SAAS,GAAGF,KAAK,CAACC,IAAD,CAAvB;AACA,yBAAO;AAAEC,oBAAAA,SAAS,EAAEA,SAAS,CAACQ,QAAV;AAAb,mBAAP;AACD,iBAHiB,CAJF;AAQhBb,gBAAAA,cAAc,CAACW,SAAD,CAAd;AACA,oBAAIF,KAAJ,EAAWP,UAAU,CAAC,KAAD,CAAV;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATM,SAAS;AAAA;AAAA;AAAA,OAAf;;AAWAA,IAAAA,SAAS;AACV,GAtBQ,EAsBN,CAACd,QAAD,CAtBM,CAAT;AAwBAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIE,SAAJ,EAAe;AACb,UAAMqB,OAAO,GAAGf,WAAW,CAACa,GAAZ,CAAgB,UAACR,IAAD,EAAOW,KAAP,EAAiB;AAC/C,YAAIX,IAAI,CAACC,SAAL,CAAeW,WAAf,GAA6BC,OAA7B,CAAqCxB,SAAS,CAACuB,WAAV,EAArC,KAAiE,CAArE,EACE,OAAOnB,QAAQ,CAACkB,KAAD,CAAf;AACF,eAAO,IAAP;AACD,OAJe,CAAhB;AAKAnB,MAAAA,eAAe,CACbkB,OAAO,CAACI,MAAR,CAAe,UAACd,IAAD,EAAU;AACvB,YAAIA,IAAJ,EAAU,OAAO,IAAP;AACV,eAAO,KAAP;AACD,OAHD,CADa,CAAf;AAMD,KAZD,MAYOR,eAAe,CAACC,QAAD,CAAf;AACR,GAdQ,EAcN,CAACJ,SAAD,EAAYI,QAAZ,EAAsBE,WAAtB,CAdM,CAAT;AAgBA,SAAO;AAAEJ,IAAAA,YAAY,EAAZA,YAAF;AAAgBM,IAAAA,OAAO,EAAPA;AAAhB,GAAP;AACD,CA/CM","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useTableSearch = ({ searchVal, retrieve }) => {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [origData, setOrigData] = useState([]);\r\n  const [searchIndex, setSearchIndex] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const crawl = (user, allValues) => {\r\n      if (!allValues) allValues = [];\r\n      for (var key in user) {\r\n        if (typeof user[key] === \"object\") crawl(user[key], allValues);\r\n        else allValues.push(user[key] + \" \");\r\n      }\r\n      return allValues;\r\n    };\r\n    const fetchData = async () => {\r\n      const { data: users } = await retrieve();\r\n      setOrigData(users);\r\n      setFilteredData(users);\r\n      const searchInd = users.map((user) => {\r\n        const allValues = crawl(user);\r\n        return { allValues: allValues.toString() };\r\n      });\r\n      setSearchIndex(searchInd);\r\n      if (users) setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [retrieve]);\r\n\r\n  useEffect(() => {\r\n    if (searchVal) {\r\n      const reqData = searchIndex.map((user, index) => {\r\n        if (user.allValues.toLowerCase().indexOf(searchVal.toLowerCase()) >= 0)\r\n          return origData[index];\r\n        return null;\r\n      });\r\n      setFilteredData(\r\n        reqData.filter((user) => {\r\n          if (user) return true;\r\n          return false;\r\n        })\r\n      );\r\n    } else setFilteredData(origData);\r\n  }, [searchVal, origData, searchIndex]);\r\n\r\n  return { filteredData, loading };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}